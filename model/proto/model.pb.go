// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model.proto

package protomodel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Blocker int32

const (
	Blocker_DealCards Blocker = 0
	Blocker_CribCard  Blocker = 1
	Blocker_CutCard   Blocker = 2
	Blocker_PegCard   Blocker = 3
	Blocker_CountHand Blocker = 4
	Blocker_CountCrib Blocker = 5
)

var Blocker_name = map[int32]string{
	0: "DealCards",
	1: "CribCard",
	2: "CutCard",
	3: "PegCard",
	4: "CountHand",
	5: "CountCrib",
}

var Blocker_value = map[string]int32{
	"DealCards": 0,
	"CribCard":  1,
	"CutCard":   2,
	"PegCard":   3,
	"CountHand": 4,
	"CountCrib": 5,
}

func (x Blocker) String() string {
	return proto.EnumName(Blocker_name, int32(x))
}

func (Blocker) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{0}
}

type PlayerColor int32

const (
	PlayerColor_Green PlayerColor = 0
	PlayerColor_Blue  PlayerColor = 1
	PlayerColor_Red   PlayerColor = 2
)

var PlayerColor_name = map[int32]string{
	0: "Green",
	1: "Blue",
	2: "Red",
}

var PlayerColor_value = map[string]int32{
	"Green": 0,
	"Blue":  1,
	"Red":   2,
}

func (x PlayerColor) String() string {
	return proto.EnumName(PlayerColor_name, int32(x))
}

func (PlayerColor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{1}
}

type Card_Suit int32

const (
	Card_SPADES   Card_Suit = 0
	Card_CLUBS    Card_Suit = 1
	Card_DIAMONDS Card_Suit = 2
	Card_HEARTS   Card_Suit = 3
)

var Card_Suit_name = map[int32]string{
	0: "SPADES",
	1: "CLUBS",
	2: "DIAMONDS",
	3: "HEARTS",
}

var Card_Suit_value = map[string]int32{
	"SPADES":   0,
	"CLUBS":    1,
	"DIAMONDS": 2,
	"HEARTS":   3,
}

func (x Card_Suit) String() string {
	return proto.EnumName(Card_Suit_name, int32(x))
}

func (Card_Suit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{0, 0}
}

type Card struct {
	Suit                 Card_Suit `protobuf:"varint,1,opt,name=suit,proto3,enum=protomodel.Card_Suit" json:"suit,omitempty"`
	Value                int32     `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{0}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetSuit() Card_Suit {
	if m != nil {
		return m.Suit
	}
	return Card_SPADES
}

func (m *Card) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type PeggedCard struct {
	Card                 *Card    `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	PlayerID             int32    `protobuf:"varint,2,opt,name=playerID,proto3" json:"playerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeggedCard) Reset()         { *m = PeggedCard{} }
func (m *PeggedCard) String() string { return proto.CompactTextString(m) }
func (*PeggedCard) ProtoMessage()    {}
func (*PeggedCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{1}
}

func (m *PeggedCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeggedCard.Unmarshal(m, b)
}
func (m *PeggedCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeggedCard.Marshal(b, m, deterministic)
}
func (m *PeggedCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeggedCard.Merge(m, src)
}
func (m *PeggedCard) XXX_Size() int {
	return xxx_messageInfo_PeggedCard.Size(m)
}
func (m *PeggedCard) XXX_DiscardUnknown() {
	xxx_messageInfo_PeggedCard.DiscardUnknown(m)
}

var xxx_messageInfo_PeggedCard proto.InternalMessageInfo

func (m *PeggedCard) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *PeggedCard) GetPlayerID() int32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

type Player struct {
	PlayerID             int32    `protobuf:"varint,1,opt,name=playerID,proto3" json:"playerID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{2}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetPlayerID() int32 {
	if m != nil {
		return m.PlayerID
	}
	return 0
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Hand struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hand) Reset()         { *m = Hand{} }
func (m *Hand) String() string { return proto.CompactTextString(m) }
func (*Hand) ProtoMessage()    {}
func (*Hand) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{3}
}

func (m *Hand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hand.Unmarshal(m, b)
}
func (m *Hand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hand.Marshal(b, m, deterministic)
}
func (m *Hand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hand.Merge(m, src)
}
func (m *Hand) XXX_Size() int {
	return xxx_messageInfo_Hand.Size(m)
}
func (m *Hand) XXX_DiscardUnknown() {
	xxx_messageInfo_Hand.DiscardUnknown(m)
}

var xxx_messageInfo_Hand proto.InternalMessageInfo

func (m *Hand) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Game struct {
	Id                   int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	NumActions           int64                 `protobuf:"varint,2,opt,name=numActions,proto3" json:"numActions,omitempty"`
	CurrentDealer        int32                 `protobuf:"varint,3,opt,name=currentDealer,proto3" json:"currentDealer,omitempty"`
	Phase                int32                 `protobuf:"varint,4,opt,name=phase,proto3" json:"phase,omitempty"`
	CutCard              *Card                 `protobuf:"bytes,5,opt,name=cutCard,proto3" json:"cutCard,omitempty"`
	BlockingPlayers      map[int32]Blocker     `protobuf:"bytes,6,rep,name=blockingPlayers,proto3" json:"blockingPlayers,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protomodel.Blocker"`
	PlayerColors         map[int32]PlayerColor `protobuf:"bytes,7,rep,name=playerColors,proto3" json:"playerColors,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=protomodel.PlayerColor"`
	CurrentScores        map[int32]int32       `protobuf:"bytes,8,rep,name=currentScores,proto3" json:"currentScores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LagScores            map[int32]int32       `protobuf:"bytes,9,rep,name=lagScores,proto3" json:"lagScores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Hands                map[int32]*Hand       `protobuf:"bytes,10,rep,name=hands,proto3" json:"hands,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Crib                 *Hand                 `protobuf:"bytes,11,opt,name=crib,proto3" json:"crib,omitempty"`
	Players              []*Player             `protobuf:"bytes,12,rep,name=players,proto3" json:"players,omitempty"`
	PeggedCards          []*PeggedCard         `protobuf:"bytes,13,rep,name=peggedCards,proto3" json:"peggedCards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Game) Reset()         { *m = Game{} }
func (m *Game) String() string { return proto.CompactTextString(m) }
func (*Game) ProtoMessage()    {}
func (*Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_4c16552f9fdb66d8, []int{4}
}

func (m *Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Game.Unmarshal(m, b)
}
func (m *Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Game.Marshal(b, m, deterministic)
}
func (m *Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Game.Merge(m, src)
}
func (m *Game) XXX_Size() int {
	return xxx_messageInfo_Game.Size(m)
}
func (m *Game) XXX_DiscardUnknown() {
	xxx_messageInfo_Game.DiscardUnknown(m)
}

var xxx_messageInfo_Game proto.InternalMessageInfo

func (m *Game) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Game) GetNumActions() int64 {
	if m != nil {
		return m.NumActions
	}
	return 0
}

func (m *Game) GetCurrentDealer() int32 {
	if m != nil {
		return m.CurrentDealer
	}
	return 0
}

func (m *Game) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *Game) GetCutCard() *Card {
	if m != nil {
		return m.CutCard
	}
	return nil
}

func (m *Game) GetBlockingPlayers() map[int32]Blocker {
	if m != nil {
		return m.BlockingPlayers
	}
	return nil
}

func (m *Game) GetPlayerColors() map[int32]PlayerColor {
	if m != nil {
		return m.PlayerColors
	}
	return nil
}

func (m *Game) GetCurrentScores() map[int32]int32 {
	if m != nil {
		return m.CurrentScores
	}
	return nil
}

func (m *Game) GetLagScores() map[int32]int32 {
	if m != nil {
		return m.LagScores
	}
	return nil
}

func (m *Game) GetHands() map[int32]*Hand {
	if m != nil {
		return m.Hands
	}
	return nil
}

func (m *Game) GetCrib() *Hand {
	if m != nil {
		return m.Crib
	}
	return nil
}

func (m *Game) GetPlayers() []*Player {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Game) GetPeggedCards() []*PeggedCard {
	if m != nil {
		return m.PeggedCards
	}
	return nil
}

func init() {
	proto.RegisterEnum("protomodel.Blocker", Blocker_name, Blocker_value)
	proto.RegisterEnum("protomodel.PlayerColor", PlayerColor_name, PlayerColor_value)
	proto.RegisterEnum("protomodel.Card_Suit", Card_Suit_name, Card_Suit_value)
	proto.RegisterType((*Card)(nil), "protomodel.Card")
	proto.RegisterType((*PeggedCard)(nil), "protomodel.PeggedCard")
	proto.RegisterType((*Player)(nil), "protomodel.Player")
	proto.RegisterType((*Hand)(nil), "protomodel.Hand")
	proto.RegisterType((*Game)(nil), "protomodel.Game")
	proto.RegisterMapType((map[int32]Blocker)(nil), "protomodel.Game.BlockingPlayersEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "protomodel.Game.CurrentScoresEntry")
	proto.RegisterMapType((map[int32]*Hand)(nil), "protomodel.Game.HandsEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "protomodel.Game.LagScoresEntry")
	proto.RegisterMapType((map[int32]PlayerColor)(nil), "protomodel.Game.PlayerColorsEntry")
}

func init() { proto.RegisterFile("model.proto", fileDescriptor_4c16552f9fdb66d8) }

var fileDescriptor_4c16552f9fdb66d8 = []byte{
	// 655 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6f, 0xd3, 0x4a,
	0x10, 0xad, 0xbf, 0xf2, 0x31, 0x69, 0x73, 0xf7, 0xce, 0xed, 0xbd, 0xd7, 0x2a, 0x12, 0x54, 0xa6,
	0x54, 0x6d, 0x81, 0x48, 0x94, 0x07, 0x2a, 0x04, 0x12, 0xa9, 0x53, 0xda, 0xa2, 0xd2, 0x46, 0x36,
	0x08, 0x9e, 0x90, 0x9c, 0x78, 0x95, 0x5a, 0x75, 0xec, 0x68, 0x6d, 0x23, 0xf5, 0x0d, 0xfe, 0x39,
	0xda, 0xb1, 0x9b, 0xd8, 0xb5, 0x79, 0xe0, 0xc9, 0x9e, 0x9d, 0x73, 0xce, 0xce, 0x9e, 0xd9, 0x59,
	0xe8, 0xcd, 0x63, 0x9f, 0x87, 0x83, 0x85, 0x88, 0xd3, 0x18, 0x81, 0x3e, 0xb4, 0x62, 0xfd, 0x50,
	0x40, 0xb7, 0x3d, 0xe1, 0xe3, 0x3e, 0xe8, 0x49, 0x16, 0xa4, 0xa6, 0xb2, 0xad, 0xec, 0xf5, 0x0f,
	0xff, 0x1d, 0xac, 0x30, 0x03, 0x99, 0x1f, 0xb8, 0x59, 0x90, 0x3a, 0x04, 0xc1, 0x4d, 0x30, 0xbe,
	0x7b, 0x61, 0xc6, 0x4d, 0x75, 0x5b, 0xd9, 0x33, 0x9c, 0x3c, 0xb0, 0x5e, 0x81, 0x2e, 0x31, 0x08,
	0xd0, 0x72, 0xc7, 0xc3, 0xd1, 0x89, 0xcb, 0xd6, 0xb0, 0x0b, 0x86, 0x7d, 0xf1, 0xf9, 0xd8, 0x65,
	0x0a, 0xae, 0x43, 0x67, 0x74, 0x3e, 0xfc, 0x78, 0x75, 0x39, 0x72, 0x99, 0x2a, 0x41, 0x67, 0x27,
	0x43, 0xe7, 0x93, 0xcb, 0x34, 0xeb, 0x12, 0x60, 0xcc, 0x67, 0x33, 0xee, 0x53, 0x1d, 0x3b, 0xa0,
	0x4f, 0x3d, 0xe1, 0x53, 0x1d, 0xbd, 0x43, 0x76, 0xbf, 0x0e, 0x87, 0xb2, 0xb8, 0x05, 0x9d, 0x45,
	0xe8, 0xdd, 0x72, 0x71, 0x3e, 0x2a, 0xaa, 0x58, 0xc6, 0xd6, 0x11, 0xb4, 0xc6, 0xf4, 0x5f, 0x41,
	0x29, 0x55, 0x14, 0x22, 0xe8, 0x91, 0x37, 0xcf, 0xcf, 0xd0, 0x75, 0xe8, 0xdf, 0x1a, 0x80, 0x7e,
	0xe6, 0x45, 0x3e, 0xee, 0x82, 0x21, 0x77, 0x49, 0x4c, 0x65, 0x5b, 0x6b, 0x2c, 0x22, 0x4f, 0x5b,
	0x3f, 0x3b, 0xa0, 0x9f, 0x7a, 0x73, 0x8e, 0x7d, 0x50, 0x03, 0xbf, 0xd8, 0x42, 0x0d, 0x7c, 0x7c,
	0x08, 0x10, 0x65, 0xf3, 0xe1, 0x34, 0x0d, 0xe2, 0x28, 0xa1, 0x2d, 0x34, 0xa7, 0xb4, 0x82, 0x3b,
	0xb0, 0x31, 0xcd, 0x84, 0xe0, 0x51, 0x3a, 0xe2, 0x5e, 0xc8, 0x85, 0xa9, 0x11, 0xb5, 0xba, 0x28,
	0x7d, 0x5e, 0x5c, 0x7b, 0x09, 0x37, 0xf5, 0xdc, 0x67, 0x0a, 0xf0, 0x00, 0xda, 0xd3, 0x2c, 0x95,
	0x65, 0x98, 0xc6, 0x6f, 0x3c, 0xba, 0x03, 0xe0, 0x15, 0xfc, 0x35, 0x09, 0xe3, 0xe9, 0x4d, 0x10,
	0xcd, 0x72, 0x4b, 0x12, 0xb3, 0x45, 0x47, 0x7a, 0x52, 0xe6, 0xc8, 0x23, 0x0c, 0x8e, 0xab, 0xb8,
	0x93, 0x28, 0x15, 0xb7, 0xce, 0x7d, 0x36, 0xbe, 0x87, 0xf5, 0xdc, 0x41, 0x3b, 0x0e, 0x63, 0x91,
	0x98, 0x6d, 0x52, 0xb3, 0x6a, 0x6a, 0xe3, 0x12, 0x28, 0x97, 0xaa, 0xf0, 0xf0, 0x7c, 0x69, 0x80,
	0x3b, 0x8d, 0x05, 0x4f, 0xcc, 0x0e, 0x09, 0x3d, 0xae, 0x09, 0xd9, 0x65, 0x54, 0xae, 0x54, 0x65,
	0xe2, 0x5b, 0xe8, 0x86, 0xde, 0xac, 0x90, 0xe9, 0x92, 0xcc, 0xa3, 0x9a, 0xcc, 0xc5, 0x1d, 0x22,
	0x97, 0x58, 0x31, 0xf0, 0x05, 0x18, 0xd7, 0x5e, 0xe4, 0x27, 0x26, 0x10, 0xf5, 0x41, 0x8d, 0x2a,
	0x6f, 0x44, 0x41, 0xcb, 0x91, 0x74, 0x45, 0x45, 0x30, 0x31, 0x7b, 0x75, 0xfb, 0x25, 0xd8, 0xa1,
	0x2c, 0x3e, 0x83, 0xf6, 0xa2, 0xf0, 0x7c, 0x9d, 0xa4, 0xb1, 0x0c, 0xcc, 0x0d, 0x72, 0xee, 0x20,
	0x78, 0x04, 0xbd, 0xc5, 0x72, 0x08, 0x12, 0x73, 0x83, 0x18, 0xff, 0x55, 0x18, 0xcb, 0xb4, 0x53,
	0x86, 0x6e, 0x7d, 0x81, 0xcd, 0xa6, 0xde, 0x21, 0x03, 0xed, 0x86, 0xdf, 0x16, 0x97, 0x52, 0xfe,
	0xe2, 0x7e, 0x79, 0x6e, 0xfb, 0x87, 0xff, 0x94, 0xd5, 0x49, 0x82, 0x8b, 0x62, 0x98, 0x5f, 0xab,
	0x47, 0xca, 0xd6, 0x57, 0xf8, 0xbb, 0xd6, 0xc6, 0x06, 0xd5, 0xe7, 0x55, 0xd5, 0xff, 0xeb, 0xa7,
	0x24, 0x7e, 0x59, 0xf9, 0x1d, 0x60, 0xbd, 0xaf, 0x0d, 0xd2, 0x8d, 0x0f, 0x0d, 0x29, 0xbc, 0x81,
	0x7e, 0xb5, 0xa5, 0x7f, 0xc4, 0xfe, 0x00, 0xb0, 0xea, 0x6a, 0x03, 0x73, 0xb7, 0xcc, 0x6c, 0xea,
	0xf0, 0x4a, 0xeb, 0xe0, 0x1b, 0xb4, 0x0b, 0xef, 0x70, 0x03, 0xba, 0x72, 0x72, 0xa9, 0x2d, 0x6c,
	0x4d, 0xbe, 0x78, 0xb6, 0x08, 0x26, 0x32, 0x64, 0x0a, 0xf6, 0xa0, 0x6d, 0xe7, 0x53, 0xc9, 0x54,
	0x19, 0x8c, 0xf9, 0x8c, 0x02, 0x4d, 0xd2, 0xec, 0x38, 0x8b, 0x52, 0xa9, 0xcc, 0xf4, 0x65, 0x28,
	0xb9, 0xcc, 0x38, 0x78, 0x0a, 0xbd, 0x92, 0x8b, 0xf2, 0x45, 0x3d, 0x15, 0x9c, 0x47, 0x6c, 0x0d,
	0x3b, 0xa0, 0x1f, 0x87, 0x19, 0x67, 0x0a, 0xb6, 0x41, 0x73, 0xb8, 0xcf, 0xd4, 0x49, 0x8b, 0x0a,
	0x7d, 0xf9, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x2e, 0x41, 0x11, 0xef, 0x05, 0x00, 0x00,
}
